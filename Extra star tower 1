from library import turn_right, turn_around, find_north


x = 0
fn = 0


def return_to_start():
    find_north()
    turn_left()
    while front_is_clear():
        move()
        if not front_is_clear():
            turn_left()
            while front_is_clear():
                move()
                if wall_on_right() and not front_is_clear():
                    done()

#default program has a bug, direction indicate 3 stars per start,
#but fails in doing more than one star.

def tripple_stack():
    if x % 2 == 0:
        for star in range(1):
            put()
       
    
    
def stack_space():
    global x, fn
    while front_is_clear():
        if fn == 3:
            return_to_start()
        
            
        tripple_stack()
        move()
        x += 1
        
        
        
            
        if not front_is_clear():
            find_north()
            fn += 1
            tripple_stack()
            if wall_on_right():
                move()
                if x % 2 != 0:
                    x = 1
                    turn_left()
                elif x % 2 == 0:
                    x = 0
                    turn_left()
                
            elif not wall_on_right():
                move()
                x = 0
                turn_right()
                
    
think(1)                
#tripple_stack()
stack_space()
